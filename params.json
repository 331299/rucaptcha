{
  "name": "RuCaptcha",
  "tagline": "This is a Captcha gem for Rails Application. It run ImageMagick command to draw Captcha image.",
  "body": "# RuCaptcha\r\n\r\n[![Gem Version](https://badge.fury.io/rb/rucaptcha.svg)](https://badge.fury.io/rb/rucaptcha)\r\n[![Build Status](https://travis-ci.org/huacnlee/rucaptcha.svg)](https://travis-ci.org/huacnlee/rucaptcha)\r\n[![Code Climate](https://codeclimate.com/github/huacnlee/rucaptcha/badges/gpa.svg)](https://codeclimate.com/github/huacnlee/rucaptcha)\r\n\r\nThis is a Captcha gem for Rails Applications. It runs an ImageMagick command to draw Captcha image - so it has NO performance issues or memory leak issues. **There is NO: RMagick**\r\n\r\n## Example\r\n\r\n![1](https://cloud.githubusercontent.com/assets/5518/15423974/b186b0d6-1eb2-11e6-9c0e-4cc3a66f32c8.png)\r\n![2](https://cloud.githubusercontent.com/assets/5518/15423975/b1887b6e-1eb2-11e6-895f-5629f82697d3.png)\r\n![3](https://cloud.githubusercontent.com/assets/5518/15423978/b18f08ee-1eb2-11e6-9670-c21dba290e04.png)\r\n![4](https://cloud.githubusercontent.com/assets/5518/15423976/b18b6946-1eb2-11e6-8413-700ded157262.png)\r\n![5](https://cloud.githubusercontent.com/assets/5518/15423977/b18e7c62-1eb2-11e6-96f7-5bd6981d4185.png)\r\n![6](https://cloud.githubusercontent.com/assets/5518/15423979/b19175d4-1eb2-11e6-9417-7d496fb996b4.png)\r\n![7](https://cloud.githubusercontent.com/assets/5518/15423980/b1caf944-1eb2-11e6-862e-78c0a9360b43.png)\r\n\r\nIdea by: https://ruby-china.org/topics/20558#reply4\r\n\r\n[中文介绍和使用说明](https://ruby-china.org/topics/27832)\r\n\r\n## Feature\r\n\r\n- Only need `ImageMagick`, No `RMagick`, No `mini_magick`;\r\n- For Rails Application;\r\n- Simple, Easy to use;\r\n- File Caching for performance.\r\n\r\n## Requirements\r\n\r\n- ImageMagick 6.9+\r\n\r\n#### Ubuntu\r\n\r\n```\r\nsudo apt-get install imagemagick\r\n```\r\n\r\n#### Mac OS X\r\n\r\n```bash\r\nbrew install imagemagick ghostscript\r\n```\r\n\r\n## Usage\r\n\r\nPut rucaptcha in your `Gemfile`:\r\n\r\n```\r\ngem 'rucaptcha'\r\n```\r\n\r\nCreate `config/initializers/rucaptcha.rb`\r\n\r\n```rb\r\nRuCaptcha.configure do\r\n  # Number of chars, default: 4\r\n  self.len = 4\r\n  # Image font size, default: 45\r\n  self.font_size = 45\r\n  # Cache generated images in file store, this is config files limit, default: 100\r\n  # set 0 to disable file cache.\r\n  self.cache_limit = 100\r\n  # Custom captcha code expire time if you need, default: 2 minutes\r\n  # self.expires_in = 120\r\n  # Color style, default: :colorful, allows: [:colorful, :black_white]\r\n  # self.style = :colorful\r\nend\r\n```\r\n\r\nEdit `config/routes.rb`, add the following code:\r\n\r\n```rb\r\nRails.application.routes.draw do\r\n  ...\r\n  mount RuCaptcha::Engine => \"/rucaptcha\"\r\n  ...\r\nend\r\n```\r\n\r\nController `app/controller/account_controller.rb`\r\n\r\n```rb\r\nclass AccountController < ApplicationController\r\n  def create\r\n    @user = User.new(params[:user])\r\n    if verify_rucaptcha?(@user) && @user.save\r\n      redirect_to root_path, notice: 'Sign up successed.'\r\n    else\r\n      render 'account/new'\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nView `app/views/account/new.html.erb`\r\n\r\n```erb\r\n<form>\r\n  ...\r\n  <div class=\"form-group\">\r\n    <%= rucaptcha_input_tag(class: 'form-control', placeholder: 'Input Captcha') %>\r\n    <%= rucaptcha_image_tag(alt: 'Captcha') %>\r\n  </div>\r\n  ...\r\n</form>\r\n```\r\n\r\nAnd if you are use Devise, you can read this to add validation: [RuCaptcha with Devise](https://github.com/huacnlee/rucaptcha/wiki/Working-with-Devise).\r\n\r\n### Write your test skip captcha validation\r\n\r\nfor RSpec\r\n\r\n```rb\r\ndescribe 'sign up and login', type: :feature do\r\n  before do\r\n    allow_any_instance_of(ActionController::Base).to receive(:verify_rucaptcha?).and_return(true)\r\n  end\r\n\r\n  it { ... }\r\nend\r\n```\r\n\r\nfor MiniTest\r\n\r\n```rb\r\nclass ActionDispatch::IntegrationTest\r\n  def sign_in(user)\r\n    ActionController::Base.any_instance.stubs(:verify_rucaptcha?).returns(true)\r\n    post user_session_path \\\r\n         'user[email]'    => user.email,\r\n         'user[password]' => user.password\r\n  end\r\nend\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}